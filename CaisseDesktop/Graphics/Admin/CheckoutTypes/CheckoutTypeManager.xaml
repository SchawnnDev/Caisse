<Window x:Class="CaisseDesktop.Graphics.Admin.CheckoutTypes.CheckoutTypeManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CaisseDesktop.Graphics.Admin.CheckoutTypes"
        xmlns:models="clr-namespace:CaisseDesktop.Models.Admin.CheckoutTypes"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:utils="clr-namespace:CaisseDesktop.Graphics.Utils"
        xmlns:converters="clr-namespace:CaisseDesktop.Graphics.Utils.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=models:CheckoutTypeConfigModel, IsDesignTimeCreatable=False}"
        Title="Gestion d'un type de caisse" Height="700" Width="1200">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:EnumToCollectionConverter x:Key="EnumToCollectionConverter"/>
            <converters:BoolToStringConverter x:Key="BooleanToStringConverter" FalseValue="Non" TrueValue="Oui" />
            <converters:BoolToStringConverter x:Key="ConsigneBooleanToStringConverter" FalseValue="activée" TrueValue="désactivée" />
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="50" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top">

                <MenuItem x:Name="Back" Header="_Retour" Command="{Binding BackCommand}" />

                <MenuItem Header="_Articles">

                    <MenuItem x:Name="AddArticle" Header="_Ajouter un article" Command="{Binding AddArticleCommand}" />

                    <Separator />

                    <MenuItem x:Name="ImportArticle" Header="_Importer un article" />

                    <MenuItem x:Name="ExportArticle" Header="_Exporter un article" />
                </MenuItem>

            </Menu>

        </DockPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="400" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition MaxHeight="80" />
            </Grid.RowDefinitions>


            <GroupBox Header="Informations" Margin="5" Grid.Column="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="100" />
                        <RowDefinition MaxHeight="100" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Label Content="Nom :" HorizontalAlignment="Left"
                           VerticalAlignment="Center" FontWeight="Bold" Grid.Row="0" Grid.Column="0" />
                    <TextBox TextWrapping="NoWrap" Text="{Binding Name}"
                             VerticalAlignment="Center" Margin="10" MinHeight="25" Grid.Row="0" Grid.Column="1" />

                    <Label Content="Type :" HorizontalAlignment="Left"
                           VerticalAlignment="Center" FontWeight="Bold" Grid.Row="1" Grid.Column="0" />

                    <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Path=Type, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                              SelectedValuePath="Value"
                              DisplayMemberPath="Description"
                              SelectedValue="{Binding Path=Type}" />

                    <Label Content="Caisses :" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left"
                           VerticalAlignment="Top" FontWeight="Bold" />
                    <ListView Grid.Column="1" Grid.Row="2" />


                </Grid>
            </GroupBox>

            <GroupBox Header="Liste des articles" Margin="5" Grid.Column="1" Grid.Row="0">

                <ListBox ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ItemsSource="{Binding Articles, IsAsync=true}" x:Name="ArticlesGrid">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="6"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <materialDesign:Card Width="200">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="140" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Image Source="{Binding Article.ImageSrc}" Stretch="Uniform" />
                                    <Button Grid.Row="0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Margin="0 0 16 -20"  BorderBrush="{Binding Article.Color}" Background="{Binding Article.Color}"
                                        Command="{Binding EditCommand}" CommandParameter="{Binding}">
                                        <materialDesign:PackIcon Kind="Edit" />
                                    </Button>
                                    <StackPanel
                                        Grid.Row="1"
                                        Margin="8 24 8 0">
                                        <TextBlock FontWeight="Bold" Text="{Binding Article.Name}" />

                                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center">
                                            Prix : <TextBlock Text="{Binding Article.Price}"></TextBlock> €
                                        </TextBlock>
                                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center">
                                            Quantité : <TextBlock Text="{Binding Article.MaxSellNumberPerDay}"></TextBlock>
                                        </TextBlock>
                                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center">
                                            Consigne : <TextBlock Text="{Binding Article.NeedsCup, Converter={StaticResource BooleanToStringConverter}}"></TextBlock>
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Grid.Row="2"
                                        Orientation="Horizontal"
                                        Margin="8">
                                        <Button
                                            Style="{StaticResource MaterialDesignToolButton}"
                                            Width="30"
                                            Padding="2 0 2 0"
                                            materialDesign:RippleAssist.IsCentered="True" IsHitTestVisible="False">

                                            <Button.ToolTip>
                                                <TextBlock>La consigne est <TextBlock Text="{Binding Article.NeedsCup, Converter={StaticResource ConsigneBooleanToStringConverter}}"></TextBlock>.</TextBlock>
                                            </Button.ToolTip>
                                            <Button.ContentTemplate>
                                                <DataTemplate>
                                                    <materialDesign:PackIcon Kind="Cup" x:Name="NeedsCupIcon" />
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding Article.NeedsCup, Delay=2}" Value="False">
                                                            <Setter Property="Kind" Value="CupOff" TargetName="NeedsCupIcon"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>

                                            </Button.ContentTemplate>

                                        </Button>
                                        <materialDesign:PopupBox
                                            Style="{StaticResource MaterialDesignToolPopupBox}"
                                            Padding="2 0 2 0">
                                            <StackPanel>
                                                <Button Content="Exporter" Command="{Binding ExportCommand}" CommandParameter="{Binding}" />
                                                <Button Content="Supprimer" Command="{Binding DeleteCommand}" CommandParameter="{Binding}"/>
                                            </StackPanel>
                                        </materialDesign:PopupBox>
                                    </StackPanel>
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </GroupBox>

            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Content="Sauvegarder" Command="{Binding SaveCommand}"/>
        </Grid>

    </Grid>
</Window>