<Window x:Class="CaisseDesktop.Graphics.Common.Checkout"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:models="clr-namespace:CaisseDesktop.Models.Windows"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=models:CheckoutModel, IsDesignTimeCreatable=False}"
        Title="Checkout" Height="600" Width="1000" WindowStyle="None" WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <!--
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0" />
                <GradientStop Color="#FF2073D6" Offset="1" />
            </LinearGradientBrush>
        </Grid.Background> -->

        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="40" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition MaxWidth="280" />
        </Grid.ColumnDefinitions>

        <materialDesign:PopupBox Grid.Row="0" Grid.Column="0"
                                 Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                 PlacementMode="BottomAndAlignCentres"
                                 ToolTipService.Placement="Right"
                                 HorizontalAlignment="Left" Height="Auto" Margin="3,2,0,3" Width="35">
            <StackPanel>
                <Button ToolTip="Changer d'utilisateur" Click="SwitchUser_OnClick">
                    <materialDesign:PackIcon Kind="UsersSwitch" />
                </Button>
                <Button ToolTip="Quitter l'application" Click="Quit_OnClick">
                    <materialDesign:PackIcon Kind="Logout" />
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>

        <ListBox Grid.Row="1" Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Auto"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Operations, IsAsync=true}"
                 x:Name="ArticlesGrid" Grid.IsSharedSizeScope="True">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="6" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="Selector.IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd"
                                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card Width="200">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="140" />
                                <RowDefinition
                                    Height="*" />
                                <RowDefinition
                                    Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Source="{Binding ImageSrc}" Stretch="Uniform" />
                            <StackPanel Grid.Row="1" Margin="8 24 8 0">
                                <TextBlock FontWeight="Bold" TextAlignment="Center" TextWrapping="Wrap"
                                           Text="{Binding Name}" FontSize="18" />

                                <TextBlock TextWrapping="Wrap" FontWeight="Bold" TextAlignment="Center"
                                           VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Price}" />
                                    €
                                </TextBlock>
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Margin="0, 5, 0, 5">
                                    <TextBlock Text="{Binding MaxSellNumberPerDay}" />
                                    restant(s)
                                </TextBlock>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 0, 0, 10">
                                    <Button Content="-"
                                            Command="{Binding DataContext.ArticleDecrementCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
                                            CommandParameter="{Binding}" IsEnabled="{Binding CanDecrement}" />
                                    <TextBox Padding="1" MinWidth="30" BorderBrush="BlueViolet" BorderThickness="2"
                                             HorizontalContentAlignment="Center" Text="{Binding Amount}" />
                                    <Button Content="+"
                                            Command="{Binding DataContext.ArticleIncrementCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"
                                            CommandParameter="{Binding}" />
                                </StackPanel>

                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" BorderBrush="LightSlateGray" BorderThickness="5">
            <Grid Background="White">

                <!--   <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="DimGray" Offset="0" />
                    <GradientStop Color="Gray" Offset="1" />
                </LinearGradientBrush></Grid.Background> -->


                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition MinHeight="280" MaxHeight="300" />
                    <RowDefinition MaxHeight="140" />
                    <RowDefinition MaxHeight="80" />
                </Grid.RowDefinitions>


                <ListBox Grid.Row="0" BorderBrush="LightSlateGray" BorderThickness="1"
                         ItemsSource="{Binding OperationList, IsAsync=true}">
                    <!--  <ListBox.Style>
                        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                            <Style.Triggers>
                                 //Use ListBox.HasItems instead of Binding 
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock>Veuillez ajouter des articles</TextBlock>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
-->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock TextWrapping="Wrap" FontWeight="Bold" TextAlignment="Center"
                                           VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Amount}" /> x <TextBlock Text="{Binding Name}" /> :
                                    <TextBlock Text="{Binding FinalPrice}" />€
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Border Grid.Row="1" BorderBrush="LightSlateGray" BorderThickness="2" Margin="50 5 50 5">

                    <Grid Margin="15">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="40" />
                            <RowDefinition MinHeight="50" />
                            <RowDefinition MaxHeight="40" />
                        </Grid.RowDefinitions>

                        <Label Content="Consignes" FontSize="20" Foreground="LightSlateGray"
                               HorizontalAlignment="Center" />

                        <Image Grid.Row="1" Source="../../Resources/Images/cup.jpg" HorizontalAlignment="Center"
                               VerticalAlignment="Center" />

                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center"
                                    VerticalAlignment="Center" Margin="0 5 0 0">
                            <Button x:Name="ConsignMinus" Content="-" Click="ConsignMinus_OnClick" IsEnabled="False" />
                            <TextBox x:Name="ConsignTextBox" BorderBrush="LightSlateGray" BorderThickness="2" Text="0"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center" MinWidth="30" TextAlignment="Center" />
                            <Button Content="+" Click="ConsignPlus_OnClick" />
                        </StackPanel>

                    </Grid>

                </Border>

                <Border Grid.Row="2" Margin="10" BorderBrush="LightSlateGray" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Label x:Name="TotalArticlesLabel" Content="Total articles : 0.00 €" FontSize="20"
                               Foreground="LightSlateGray"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15 0 0 0" />

                        <Label x:Name="TotalConsignsLabel" Grid.Row="1" Content="Total consignes : 0.00 €"
                               FontSize="20"
                               Foreground="LightSlateGray"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15 0 0 0" />

                        <Label x:Name="TotalLabel" Grid.Row="2" Content="Total général : 0.00 €" FontSize="20"
                               Foreground="LightSlateGray"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15 0 0 0" />


                    </Grid>

                </Border>


                <Button Grid.Row="3" Click="SelectPaymentMethod_OnClick" Margin="5" Height="Auto">
                    <TextBlock TextAlignment="Center" TextWrapping="Wrap">Finaliser et choisir un <LineBreak /> moyen de paiement</TextBlock>
                </Button>

            </Grid>

        </Border>

    </Grid>
</Window>